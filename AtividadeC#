01 - 
using System;
namespace programa.cs
{
    class exercicio1
    {
        static int somaVetor(int[] vetor)
        {
            int soma = 0;
            for (int i = 0; i < vetor.Length; i++)
            {
                soma += vetor[i]; 
            }
        }
    }
}

biblioteca 
using System;
namespace programa.cs
{
   public class BibliotecaArray
    {
        public static void leiaVetor(int[] vetor)
        {
            for (int i = 0; i < vetor.Length; i++)
            {
                Console.Write($"[{i}]:");
                vetor[i] = int.Parse(Console.ReadLine());
            }
        } // fim leia vetor

        public static void leiaVetor(double[] vetor)
        {
            for (int i = 0; i < vetor.Length; i++)
            {
                Console.Write($"[{i}]:");
                vetor[i] = double.Parse(Console.ReadLine());
            }
        } // fim leia vetor

        public static void geraVetor(int[] vetor)
        {
            Random random = new Random(); // gerador de aleatorios
            for (int i = 0; i < vetor.Length; i++)
            {
                vetor[i] = random.Next(1, 100);
            }
        } // fim gera vetor

        public static void geraVetor(double[] vetor)
        {
            Random random = new Random(); // gerador de aleatorios
            for (int i = 0; i < vetor.Length; i++)
            {
                vetor[i] = random.Next(1, 100) + random.NextDouble();
            }
        } // fim gera vetor

        public static void mostraVetor(int[] vetor)
        {
            for (int i = 0; i < vetor.Length; i++)
                Console.Write($" | {vetor[i]}");

        }//  fim mostra vetor

        public static void mostraVetor(double[] vetor)
        {
            for (int i = 0; i < vetor.Length; i++)
                Console.Write($" | {vetor[i]:F2}");

        }//  fim mostra vetor


   }
}

namespace programa.cs
{
    using System;

    class Program
    {
        static void Main()
        {
            double[] meuVetor = new double[5]; // declarando o vetor

            Console.WriteLine("*** Vetores em C# ***");
            Console.WriteLine("Entre com os valores para o vetor:");
            //  dados para o vetor
            BibliotecaArray.geraVetor(meuVetor);
            // mostrar dados do vetor
            Console.WriteLine("*** Vetor recebido ***");
            BibliotecaArray.mostraVetor(meuVetor);
            Console.ReadKey();
        }
    }

}

02 e 03- 
using System;
using Arrays;

class Exercicio1
{
    static double maiorValor(double[] vetor)
    {
        double maior = vetor[0];
        for (int i = 1; i < vetor.Length; i++)
        {
            if (vetor[i]>maior)
                maior = vetor[i];

        }// fim for
        return maior; 

    }
    static double menorValor(double[] vetor)
    {
        double menor = vetor[0];
        for (int i = 1; i < vetor.Length; i++)
        {
            if (vetor[i] < menor)
                menor = vetor[i];

        }// fim for
        return menor;
    }

    static void Main()
    {
        int n;
        Console.WriteLine("Tamanho do vetor:");
        n = int.Parse(Console.ReadLine());
        double[] numeros = new double[n];
        BibliotecaArray.geraVetor(numeros);
        BibliotecaArray.mostraVetor(numeros);
        double res = maiorValor(numeros);
        Console.WriteLine($"\nMaior valor:{res:F2}");
        Console.WriteLine($"Menor valor:{menorValor(numeros):F2}");
        Console.ReadLine();
    }

04- 
using System;
namespace programa.cs
{
    internal class exercicio4
    {
        static int contaImpares(int[] vetor)
        {
            int cont = 0;
            for (int i = 0; i < vetor.Length; i++)
            {
                if(vetor[i]%2 != 0) 
                  cont++;         
            }//fim for
            return cont;
        }
    }
}

05-

using System;
class Program
{

    class atividadeDNA
    {
        static void Main()
        {
            string dna;
            Console.WriteLine("Entre com as bases:");
            dna = Console.ReadLine();
            int n = dna.Length;
            char[] complementar = new char[n];

            for (int i = 0; i < n; i++)
            {
                switch (dna[i])
                {
                    case 'T':
                        complementar[i] = 'A';
                        break;
                    case 'A':
                        complementar[i] = 'T';
                        break;
                    case 'C':
                        complementar[i] = 'G';
                        break;
                    case 'G':
                        complementar[i] = 'C';
                        break;

                }    

            }
            Console.WriteLine("***DNA***");
            Console.WriteLine(dna);
            for (int i = 0;i < n; i++) 
            Console.Write(complementar[i]);
            Console.ReadKey();
        }

    }

}

06-
using System;
class atividade6
{
    static void Main()
    {
        int num = int.Parse(Console.ReadLine());
        int[] vetor = new int[num];
        Random random = new Random();

        for (int i = 0; i < n; i++)
            vetor[i] = random.Next(1, 101);

        int numeroBuscado = int.Parse(Console.ReadLine());
        int posicao = Array.IndexOf(vetor, numeroBuscado);

        Console.WriteLine(posicao != -1 ? $"Encontrado na posição {posicao}" : "Número não encontrado");
    }
}

07
using System;

class atividade07
{
    static void Main()
    {
        Console.Write("Informe o tamanho dos vetores: ");
        int n = int.Parse(Console.ReadLine());

        int[] vetor1 = new int[n];
        int[] vetor2 = new int[n];
        int[] resultado = new int[n];

        Console.WriteLine("Preencha o primeiro vetor:");
        for (int i = 0; i < n; i++)
        {
            Console.Write($"Elemento {i + 1}: ");
            vetor1[i] = int.Parse(Console.ReadLine());
        }

        Console.WriteLine("Preencha o segundo vetor:");
        for (int i = 0; i < n; i++)
        {
            Console.Write($"Elemento {i + 1}: ");
            vetor2[i] = int.Parse(Console.ReadLine());
        }

        for (int i = 0; i < n; i++)
        {
            resultado[i] = vetor1[i] * vetor2[i];
        }

        Console.WriteLine("Vetor resultante da multiplicação:");
        Console.WriteLine(string.Join(", ", resultado));
    }
}
08-
using System;

class exercicio8
{
    static void Main()
    {
        Console.Write("Informe os caracteres separados por espaço: ");
        string[] entrada = Console.ReadLine().Split(' ');

        char[] vetor = Array.ConvertAll(entrada, char.Parse);

        Console.WriteLine("Vetor em ordem inversa:");
        for (int i = vetor.Length - 1; i >= 0; i--)
        {
            Console.Write(vetor[i] + " ");
        }

        Console.WriteLine(); // Quebra de linha ao final
    }
}
 09- 
using System;

class Program
{
    static void Main()
    {
        Console.Write("Informe o tamanho do vetor: ");
        int n = int.Parse(Console.ReadLine());
        int[] vetor = new int[n];

        Console.WriteLine("Preencha o vetor:");
        for (int i = 0; i < n; i++)
        {
            Console.Write($"Elemento {i + 1}: ");
            vetor[i] = int.Parse(Console.ReadLine());
        }

        Console.Write("Informe o valor a ser buscado: ");
        int valor = int.Parse(Console.ReadLine());

        int contador = 0;
        foreach (int item in vetor)
        {
            if (item == valor) contador++;
        }

        Console.WriteLine($"O valor {valor} aparece {contador} vez(es).");
        Console.WriteLine("Elementos do vetor: " + string.Join(", ", vetor));
    }
}
10-
using System;

class Program
{
    static void Main()
    {
        Console.Write("Informe a quantidade de lançamentos: ");
        int n = int.Parse(Console.ReadLine());
        int[] lancamentos = new int[n];

        Console.WriteLine("Informe os resultados dos lançamentos (valores entre 1 e 6):");
        for (int i = 0; i < n; i++)
        {
            Console.Write($"Lançamento {i + 1}: ");
            lancamentos[i] = int.Parse(Console.ReadLine());
        }

        int[] ocorrencias = new int[6]; // Índices 0-5 correspondem às faces 1-6

        foreach (int face in lancamentos)
        {
            if (face >= 1 && face <= 6)
                ocorrencias[face - 1]++;
        }

        Console.WriteLine("Número de ocorrências de cada face:");
        for (int i = 0; i < 6; i++)
        {
            Console.WriteLine($"Face {i + 1}: {ocorrencias[i]} vez(es)");
        }
    }
}
11- 
using System;
namespace atividadeDNA
{
    internal class Exercicio11

    {
        static void Main()
        {
            string frase;
            Console.WriteLine("Entre com frase:");
            frase = Console.ReadLine();
            for (int i = 1; i < frase.Length-1; i++)
            {
                if (frase[i] != 'p')
                {
                    Console.Write(frase[i]);

                }
                else
                {
                    if (frase[i - 1] == 'p' && frase[i + 1] == 'p')
                        Console.Write(frase[i]);
                }
            }
            Console.ReadKey();
        }
    }
} using System;

class Program
{
    static void Main()
    {
        int n = int.Parse(Console.ReadLine());
        int[] vetor = new int[n];
        Random random = new Random();

        for (int i = 0; i < n; i++)
            vetor[i] = random.Next(1, 101);

        int numeroBuscado = int.Parse(Console.ReadLine());
        int posicao = Array.IndexOf(vetor, numeroBuscado);

        Console.WriteLine(posicao != -1 ? $"Encontrado na posição {posicao}" : "Número não encontrado");
    }
}
12- 
using System;
using System.Linq;

class Program
{
    static void Main()
    {
        Console.WriteLine("Informe as cinco notas separadas por espaço:");
        string[] entrada = Console.ReadLine().Split(' ');
        
        // Converter a entrada para um array de números decimais
        decimal[] notas = Array.ConvertAll(entrada, decimal.Parse);

        // Ordenar o array de notas em ordem crescente
        Array.Sort(notas);

        // Calcular a soma das três notas centrais (excluindo a menor e a maior)
        decimal notaFinal = notas[1] + notas[2] + notas[3];

        // Exibir a nota final com uma casa decimal
        Console.WriteLine(notaFinal.ToString("F1"));
    }
}




